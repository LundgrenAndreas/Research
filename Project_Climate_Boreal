#### Unpacking climate effects on boreal tree growth:
#### An analysis of tree-ring widths across temperature and soil moisture gradients

# Latest compatibility check: R version 4.3.2

#### Libraries ####
library(ggplot2)
library(dplR)
library(SPEI)
library(janitor)
library(rstudioapi)
library(tidyverse)
library(conflicted)
library(zoo)
library(nlme)
library(ggeffects)

#### Code handling ####
## Conflict handler
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
## Set directory
dir <- dirname(getActiveDocumentContext()$path)
setwd(dir)
getwd()
## Themes
plottheme <- theme_bw() +
  theme(text = element_text(family = "serif")) +
  theme(strip.background = element_rect(colour="black", fill="#CCCCCC", linetype="solid")) +
  theme(strip.text.y = element_text(face="italic",size=12),
        strip.text.x = element_text(size=12))
## Functions
interpolate_internal <- function(series) {
  non_na_idx <- which(!is.na(series))
  if (length(non_na_idx) == 0) {
    return(series)
  }
  start_idx <- min(non_na_idx)
  end_idx <- max(non_na_idx)
  series[start_idx:end_idx] <- na.approx(series[start_idx:end_idx], na.rm = FALSE)
  return(series)
}

detrend_function <- function(data, value_col, nyrs, method = "Spline") {
  data_spread <- data %>% select(Year, ID, all_of(value_col)) %>%
    spread(key = "ID", value = value_col)
  interpolated_data <- as.data.frame(lapply(data_spread[,-1], interpolate_internal))
  colnames(interpolated_data) <- colnames(data_spread[,-1])
  detrended_data <- detrend(interpolated_data, method = method, nyrs = nyrs)
  detrended_data$Year <- data_spread$Year
  return(detrended_data)
}

calculate_coincidence_rate <- function(df, param_name, high = TRUE, fraction = 0.1) {
  df %>%
    group_by(ID) %>%
    mutate(n_select = ceiling(fraction * n())) %>%
    summarise(
      selected_rwi_years = list(Year[order(RWI)][1:n_select]),
      selected_env_years = list(
        if (high) {
          Year[order(-get(param_name))][1:n_select]
        } else {
          Year[order(get(param_name))][1:n_select]
        }
      ),
      .groups = "drop"
    ) %>%
    mutate(
      overlap_count = mapply(function(rwi, env) length(base::intersect(rwi, env)), selected_rwi_years, selected_env_years),
      coincidence_rate = overlap_count / lengths(selected_rwi_years)
    ) %>% select(ID, coincidence_rate)
}

#### Read data ####
## Tree ring data
dftrw0 <- read.csv(paste0(dir, "/TRW_data.txt"), sep = "\t")
dftrw0 <- dftrw0 %>% rename("Forest" = "TraktNr")
## Site metrics
dfsite <- read.csv(paste0(dir, "/Site_data.csv"))
dfsite <- dfsite %>% mutate(Forest = as.character(Forest), PalslagsNr = as.character(PalslagsNr))
## Climate data
climvars <- read.csv(paste0(dir, "/Climate_data.csv"))

#### Data handling ####
## Using dplR for testing inter-series correlations
# Notes: With this, we keep only forests that have >5 trees that pass an inter-series correlation of 0.3281

trees <- dftrw0 %>% select(Taxar, Forest, PalslagNr, StamNr, Tradslag, Ringsasong, Arsringsbredd) %>%
  filter(Tradslag == "11" | Tradslag == "21") %>%
  group_by(Forest, PalslagNr, StamNr, Tradslag) %>% filter(Taxar == max(Taxar)) %>% ungroup() %>%
  group_by(Taxar, Forest, PalslagNr, StamNr, Tradslag) %>% filter(n() > 39) %>% ungroup() %>%
  unite(Forest_Species, c(Forest, Tradslag), remove = F)
valid_forests <- trees %>% group_by(Forest_Species) %>%
  summarise(unique_combinations = n_distinct(paste(PalslagNr, StamNr, Tradslag, sep = "_"))) %>%
  filter(unique_combinations >= 6) %>% pull(Forest_Species)
trees <- trees %>% filter(Forest_Species %in% valid_forests)
split_forests <- split(trees, trees$Forest_Species)
split_forests <- lapply(split_forests, function(df) {
  df <- df %>% mutate(ID = paste(Taxar, Forest, PalslagNr, StamNr, Tradslag, sep = "_")) %>%
    select(ID, Ringsasong, Arsringsbredd) %>% pivot_wider(names_from = ID, values_from = Arsringsbredd) %>%
    select(-Ringsasong)
  correlation <- interseries.cor(df, method="spearman")
  return(correlation)
})
filtered_trees <- bind_rows(
  lapply(names(split_forests), function(name) {
    df <- split_forests[[name]] %>% filter(res.cor >= 0.3281) %>% mutate(Forest_Species = name, ID = rownames(.))
    return(df)
  })
)
keep_trees <- filtered_trees %>% group_by(Forest_Species) %>% filter(n() > 4) %>% separate(Forest_Species, into = c("Forest", "Tradslag"))

dftrw <- dftrw0 %>% mutate(ID = paste(Taxar, Forest, PalslagNr, StamNr, Tradslag, sep = "_"))
dftrw <- dftrw[dftrw$ID %in% keep_trees$ID,]

## VPD calculation
climvars$VPD <- ((611 * exp(17.27 * climvars$Temper / (climvars$Temper + 237.3))) / 1000) * (1 - climvars$RH / 100)
climvars$VPD_thresh <- ((611 * exp(17.27 * climvars$Tempermax / (climvars$Tempermax + 237.3))) / 1000) * (1 - climvars$RH / 100)

# ## NOT RUN
# ## SPEI calculation
# ## Latitude is needed for SPEI calculation but data on coordinates is classified
# ## Hence, code below does not run
# ## Instead, see pre-calculated SPEI aggregated by month in Climate_data.csv
# pre_spei_calc <- climvars %>% separate(date, into = c("Year", "Month", "Day")) %>% group_by(Forest, Year, Month) %>%
#   summarise(across(c("Tempermax", "Tempermin"), mean, na.rm=TRUE), across("Precip", sum, na.rm=TRUE)) %>% arrange(Forest, Year, Month)
# petdf <- split(x = pre_spei_calc, f = pre_spei_calc$Forest)
# petdf <- lapply(petdf, function(x) hargreaves(Ra = NULL, Tmin = x$Tempermin, Tmax = x$Tempermax, x$Latitude[1]))
# petdf <- do.call(rbind, petdf)
# petdf <- cbind(rownames(petdf), data.frame(petdf, row.names=NULL))
# petdf <- petdf %>% rename("Forest" = "rownames(petdf)") %>% gather(key="ID", value="PET", -Forest) %>% arrange(Forest, ID) %>% select(PET)
# Spei_vars <- cbind(pre_spei_calc, petdf)
# Spei_vars$BAL <- Spei_vars$Precip - Spei_vars$PET
# Spei <- as.data.frame((spei(Spei_vars$BAL, 6))$fitted)
# Spei_vars <- cbind(Spei_vars, Spei)
# colnames(Spei_vars) <- gsub("fitted","",colnames(Spei_vars))
# colnames(Spei_vars) <- gsub("[[:punct:]]","",colnames(Spei_vars))
# Spei_vars <- Spei_vars %>% select(Forest, Year, Month, Spei)

## Calculate growing season length, and growing season means of climate variables
# Growing season starts at the first of four consecutive days with mean temperature > 5 C, and ends at the last day of the first four consecutive days with mean temperature > 5 C
# Here, we also ensure that growing season does not start earlier than March or ends earlier than September
growing_season <- climvars %>% separate(date, into = c("Year", "Month", "Day"), remove=F) %>%
  mutate(across(.cols = "Year":"Day", ~as.numeric(.))) %>% mutate(dayofyear = yday(.$date)) %>%
  mutate(numbdays = with(., ifelse(Temper > 5, 'YES', 'NO')))
growing_season <- growing_season[with(growing_season, order(Forest, date)), ]
growing_season$cons <- sequence(rle(as.character(growing_season$numbdays))$lengths)
growing_start <- growing_season %>% filter(dayofyear>60 & cons>3 & numbdays == "YES") %>%
  group_by(Forest, Year) %>% slice(which.min(dayofyear)) %>% filter(cons<360) %>% select(Forest, Year, dayofyear)
growing_end <- growing_season %>% filter(dayofyear>243 & cons>3 & numbdays == "YES") %>%
  group_by(Forest, Year) %>% slice(which.max(dayofyear)) %>% filter(cons<360) %>% select(Forest, Year, dayofyear)
season_climvars <- left_join(growing_start, growing_end, by = c("Forest", "Year")) %>%
  drop_na() %>% left_join(growing_season, ., by = c("Forest", "Year")) %>%
  filter(dayofyear>dayofyear.x-4 & dayofyear<dayofyear.y+1) %>% group_by(Forest, Year) %>%
  mutate(VPD_threshold = case_when(VPD_thresh>1.5 ~ "Yes", T ~ "No")) %>%
  summarise(across(c("Precip", "Temper", "Tempermax", "Tempermin", "Spei", "VPD"), mean, na.rm=T),
            VPD_threshold = sum(VPD_threshold == "Yes"))

#### Analysis ####
## Detrending data
df0 <- dftrw %>% rename("Year" = "Ringsasong", "PalslagsNr" = "PalslagNr") %>%
  left_join(., season_climvars, by = c("Forest", "Year")) %>% mutate(Spei2 = Spei - min(Spei, na.rm = T) + 0.1) %>%
  drop_na()
detrended_rwi <- detrend_function(df0, "Arsringsbredd", 30) %>% select(-c("2018_2023_405_5_21", "2019_3057_410_15_21", "2020_3054_410_2_21",
                                                                             "2021_2062_215_10_11", "2022_2073_305_13_21", "2022_4216_204_3_21",
                                                                             "2022_4216_208_1_21", "2018_3014_205_5_11", "2021_4237_104_1_11"))

rwi1 <- detrended_rwi %>% gather(key = "ID", value = "RWI", -Year)
filter_flawed <- rwi1 %>% group_by(ID) %>% filter(any(RWI > 3)) %>% ungroup()

detrended_temper <- detrend_function(df0, "Temper", 30)
detrended_spei <- detrend_function(df0, "Spei2", 30)
detrended_precip <- detrend_function(df0, "Precip", 30)
detrended_VPD <- detrend_function(df0, "VPD", 30)

rwi1 <- detrended_rwi %>% gather(key = "ID", value = "RWI", -Year) %>% filter(!ID %in% filter_flawed$ID)
rwi <- rwi1
temper <- detrended_temper %>% gather(key = "ID", value = "Temper", -Year)
precip <- detrended_precip %>% gather(key = "ID", value = "Precip", -Year)
VPD <- detrended_VPD %>% gather(key = "ID", value = "VPD", -Year)
spei <- detrended_spei %>% gather(key = "ID", value = "SPEI", -Year)
raw <- df0 %>% select(Year, ID, Arsringsbredd)

df <- rwi %>% left_join(temper, by = c("Year", "ID")) %>% left_join(precip, by = c("Year", "ID")) %>%
  left_join(VPD, by = c("Year", "ID")) %>% left_join(spei, by = c("Year", "ID")) %>% left_join(raw, by = c("Year", "ID")) %>%
  separate(ID, into = c("Taxar", "Forest", "PalslagsNr", "Tree_no", "Species"), remove = F) %>%
  left_join(., dfsite, by = c("Forest", "PalslagsNr")) %>% drop_na() %>% unite(Site, c(Forest, PalslagsNr), remove = F) %>%
  mutate(Forest = as.factor(Forest), ID = as.factor(ID), Species = as.factor(Species), Site = as.factor(Site), Year2 = scale(Year, center = T, scale = F))

## Calculate coincidence rates
hightemp <- calculate_coincidence_rate(df, "Temper", high = T, fraction = 0.1) %>% rename("High_temp_coincidence" = "coincidence_rate")
lowprec <- calculate_coincidence_rate(df, "Precip", high = F, fraction = 0.1) %>% rename("Low_prec_coincidence" = "coincidence_rate")

coincide_stats <- df %>% distinct(ID, Site, Species, Mean_annual_temperature, Soil_moisture_model) %>% left_join(hightemp, by = "ID") %>% left_join(lowprec, by = "ID")

## Calculate resistance values
resistance_hightemp <- df %>%
  arrange(ID, Year) %>%
  group_by(ID) %>%
  mutate(
    mean_RWI_prev3 = (lag(RWI, 1) + lag(RWI, 2) + lag(RWI, 3)) / 3,
    Resistance_temp = RWI / mean_RWI_prev3
  ) %>% drop_na() %>%
  filter(Temper >= quantile(Temper, 0.90, na.rm = TRUE)) %>%
  mutate(Arbitrary_numb = row_number()) %>%
  ungroup() %>% select(ID, Site, Resistance_temp, Mean_annual_temperature, Soil_moisture_model, Species, Arbitrary_numb)

resistance_lowprec <- df %>%
  arrange(ID, Year) %>%
  group_by(ID) %>%
  mutate(
    mean_RWI_prev3 = (lag(RWI, 1) + lag(RWI, 2) + lag(RWI, 3)) / 3,
    Resistance_precip = RWI / mean_RWI_prev3
  ) %>% drop_na() %>%
  filter(Precip <= quantile(Precip, 0.10, na.rm = TRUE)) %>%
  mutate(Arbitrary_numb = row_number()) %>%
  ungroup() %>% select(ID, Site, Resistance_precip, Mean_annual_temperature, Soil_moisture_model, Species, Arbitrary_numb)

resistance_stats <- left_join(resistance_hightemp, resistance_lowprec, by = c("ID", "Site", "Mean_annual_temperature", "Soil_moisture_model", "Species", "Arbitrary_numb"))

#### Statistics

## RWI
model.temper <- lme(RWI ~ Temper * Soil_moisture_model * Species * Mean_annual_temperature,
                   random = ~ Year2 + 1 | Site / ID,
                   correlation = corCAR1(),
                   data = df, na.action = na.omit)
summary(model.temper)
model.precip <- lme(RWI ~ Precip * Soil_moisture_model * Species * Mean_annual_temperature,
                    random = ~ Year2 + 1 | Site / ID,
                    correlation = corCAR1(),
                    data = df, na.action = na.omit)
summary(model.precip)
model.spei <- lme(RWI ~ SPEI * Soil_moisture_model * Species * Mean_annual_temperature,
                    random = ~ Year2 + 1 | Site / ID,
                    correlation = corCAR1(),
                    data = df, na.action = na.omit)
summary(model.spei)
model.vpd <- lme(RWI ~ VPD * Soil_moisture_model * Species * Mean_annual_temperature,
                  random = ~ Year2 + 1 | Site / ID,
                  correlation = corCAR1(),
                  data = df, na.action = na.omit)
summary(model.vpd)

## Coincidence rate
model.hightemp <- lme(High_temp_coincidence ~ Soil_moisture_model * Species * Mean_annual_temperature,
                      random = ~ 1 | Site, data = coincide_stats, na.action = na.omit)
summary(model.hightemp)
model.lowprec <- lme(Low_prec_coincidence ~ Soil_moisture_model * Species * Mean_annual_temperature,
                      random = ~ 1 | Site, data = coincide_stats, na.action = na.omit)
summary(model.lowprec)

## Resistance values
model.hightempres <- lme(Resistance_temp ~ Soil_moisture_model * Species * Mean_annual_temperature,
                      random = ~ 1 | Site / ID, data = resistance_stats, na.action = na.omit)
summary(model.hightempres)
model.lowprecres <- lme(Resistance_precip ~ Soil_moisture_model * Species * Mean_annual_temperature,
                         random = ~ 1 | Site / ID, data = resistance_stats, na.action = na.omit)
summary(model.lowprecres)

#### Graphs
# Prediction details for figures
spruce_MAT_quants <- paste0("Mean_annual_temperature[", paste(with(df[df$Species == "21",], quantile(Mean_annual_temperature, c(0.1, 0.5, 0.9))), collapse = ", "), "]")
spruce_SM_quants <- paste0("Soil_moisture_model[", paste( with(df[df$Species == "21",], quantile(Soil_moisture_model, c(0.1, 0.9))), collapse = ", "), "]")
pine_MAT_quants <- paste0("Mean_annual_temperature[", paste(with(df[df$Species == "11",], quantile(Mean_annual_temperature, c(0.1, 0.5, 0.9))), collapse = ", "), "]")
pine_SM_quants <- paste0("Soil_moisture_model[", paste( with(df[df$Species == "11",], quantile(Soil_moisture_model, c(0.1, 0.9))), collapse = ", "), "]")

spruce_MAT_quants_extr <- paste0("Mean_annual_temperature[", paste(with(coincide_stats[coincide_stats$Species == "21",], quantile(Mean_annual_temperature, c(0.1, 0.5, 0.9))), collapse = ", "), "]")
spruce_SM_quants_extr <- paste0("Soil_moisture_model[", paste( with(coincide_stats[coincide_stats$Species == "21",], quantile(Soil_moisture_model, c(0.1, 0.5, 0.9))), collapse = ", "), "]")
pine_MAT_quants_extr <- paste0("Mean_annual_temperature[", paste(with(coincide_stats[coincide_stats$Species == "11",], quantile(Mean_annual_temperature, c(0.1, 0.5, 0.9))), collapse = ", "), "]")
pine_SM_quants_extr <- paste0("Soil_moisture_model[", paste( with(coincide_stats[coincide_stats$Species == "11",], quantile(Soil_moisture_model, c(0.1, 0.5, 0.9))), collapse = ", "), "]")

## Figure 2 (RWI to temperature)
model.spruce_temp <- lme(RWI ~ Temper * Soil_moisture_model * Mean_annual_temperature,
                         random = ~ Year2 + 1 | Forest / ID,
                         correlation = corCAR1(),
                         data = df[df$Species == "21",], na.action = na.omit)
model.pine_temp <- lme(RWI ~ Temper * Soil_moisture_model * Mean_annual_temperature,
                       random = ~ Year2 + 1 | Forest / ID,
                       correlation = corCAR1(),
                       data = df[df$Species == "11",], na.action = na.omit)

spruce_pred <- predict_response(model.spruce_temp, terms = c("Temper", spruce_MAT_quants, spruce_SM_quants))
spruce_pred$Species <- "P. abies"
pine_pred <- predict_response(model.pine_temp, terms = c("Temper", pine_MAT_quants, pine_SM_quants))
pine_pred$Species <- "P. sylvestris"

fig2_data <- as.data.frame(rbind(spruce_pred, pine_pred)) %>% mutate(group2 = as.numeric(as.character(group)), SMI = as.numeric(as.character(facet))) %>%
  mutate(MAT = case_when(group2 < 2 ~ "0.1 quantile (cold)", group2 > 6 ~ "0.9 quantile (warm)", T ~ "Median")) %>%
  mutate(SMI = case_when(SMI < 50 ~ "0.1 quantile (dry)", T ~ "0.9 quantile (moist)")) %>%
  mutate(MAT = factor(MAT, levels = c("0.1 quantile (cold)", "Median", "0.9 quantile (warm)")), SMI = factor(SMI, levels = c("0.1 quantile (dry)", "0.9 quantile (moist)")))

fig2 <- ggplot(fig2_data, aes(x = x, y = predicted, group = interaction(MAT,SMI), color = MAT, linetype = SMI)) +
  facet_wrap(~Species) +
  geom_line(linewidth = 1.4) +
  labs(x = "Temperature anomaly", y = "RWI") +
  scale_color_manual(values = c("#4393C3","black","#B2182B")) +
  plottheme

## Fig S2 (RWI to precipitation)
model.spruce_precip <- lme(RWI ~ Precip * Soil_moisture_model * Mean_annual_temperature,
                         random = ~ Year2 + 1 | Forest / ID,
                         correlation = corCAR1(),
                         data = df[df$Species == "21",], na.action = na.omit)
model.pine_precip <- lme(RWI ~ Precip * Soil_moisture_model * Mean_annual_temperature,
                       random = ~ Year2 + 1 | Forest / ID,
                       correlation = corCAR1(),
                       data = df[df$Species == "11",], na.action = na.omit)

spruce_pred <- predict_response(model.spruce_precip, terms = c("Precip", spruce_MAT_quants, spruce_SM_quants))
spruce_pred$Species <- "P. abies"
pine_pred <- predict_response(model.pine_precip, terms = c("Precip", pine_MAT_quants, pine_SM_quants))
pine_pred$Species <- "P. sylvestris"

figs2_data <- as.data.frame(rbind(spruce_pred, pine_pred)) %>% mutate(group2 = as.numeric(as.character(group)), SMI = as.numeric(as.character(facet))) %>%
  mutate(MAT = case_when(group2 < 2 ~ "0.1 quantile (cold)", group2 > 6 ~ "0.9 quantile (warm)", T ~ "Median")) %>%
  mutate(SMI = case_when(SMI < 50 ~ "0.1 quantile (dry)", T ~ "0.9 quantile (moist)")) %>%
  mutate(MAT = factor(MAT, levels = c("0.1 quantile (cold)", "Median", "0.9 quantile (warm)")), SMI = factor(SMI, levels = c("0.1 quantile (dry)", "0.9 quantile (moist)")))

figs2 <- ggplot(figs2_data, aes(x = x, y = predicted, group = interaction(MAT,SMI), color = MAT, linetype = SMI)) +
  facet_wrap(~Species) +
  geom_line(linewidth = 1.4) +
  labs(x = "Precipitation anomaly", y = "RWI") +
  scale_color_manual(values = c("#4393C3","black","#B2182B")) +
  plottheme

## Fig 3 (coincidence rates)
model.spruce_hightemp <- lme(High_temp_coincidence ~ Soil_moisture_model * Mean_annual_temperature,
                         random = ~ 1 | Site,
                         data = coincide_stats[coincide_stats$Species == "21",], na.action = na.omit)
model.pine_hightemp <- lme(High_temp_coincidence ~ Soil_moisture_model * Mean_annual_temperature,
                       random = ~ 1 | Site,
                       data = coincide_stats[coincide_stats$Species == "11",], na.action = na.omit)

spruce_pred <- predict_response(model.spruce_hightemp, terms = c(spruce_MAT_quants_extr, spruce_SM_quants_extr))
spruce_pred$Species <- "P. abies"
pine_pred <- predict_response(model.pine_hightemp, terms = c(pine_MAT_quants_extr, pine_SM_quants_extr))
pine_pred$Species <- "P. sylvestris"

result.hightemp <- as.data.frame(rbind(spruce_pred, pine_pred)) %>% mutate(group2 = as.numeric(group), x2 = as.numeric(as.factor(x))) %>%
  mutate(MAT = case_when(x2 == 1 | x2 == 2 ~ "0.1 quantile", x2 == 3 | x2 == 4 ~ "Median", x2 == 5 | x2 == 6 ~ "0.9 quantile"),
         SMI = case_when(group2 == 1 | group2 == 4 ~ "0.1 quantile", group2 == 2 | group2 == 5 ~ "Median", group2 == 3 | group2 == 6 ~ "0.9 quantile")) %>%
  mutate(MAT = factor(MAT, levels = c("0.1 quantile", "Median", "0.9 quantile"))) %>% mutate(SMI = factor(SMI, levels = c("0.1 quantile", "Median", "0.9 quantile"))) %>%
  mutate(Type = "High temperature")

model.spruce_lowprec <- lme(Low_prec_coincidence ~ Soil_moisture_model * Mean_annual_temperature,
                             random = ~ 1 | Site,
                             data = coincide_stats[coincide_stats$Species == "21",], na.action = na.omit)
model.pine_lowprec <- lme(Low_prec_coincidence ~ Soil_moisture_model * Mean_annual_temperature,
                           random = ~ 1 | Site,
                           data = coincide_stats[coincide_stats$Species == "11",], na.action = na.omit)

spruce_pred <- predict_response(model.spruce_lowprec, terms = c(spruce_MAT_quants_extr, spruce_SM_quants_extr))
spruce_pred$Species <- "P. abies"
pine_pred <- predict_response(model.pine_lowprec, terms = c(pine_MAT_quants_extr, pine_SM_quants_extr))
pine_pred$Species <- "P. sylvestris"

result.lowprec <- as.data.frame(rbind(spruce_pred, pine_pred)) %>% mutate(group2 = as.numeric(group), x2 = as.numeric(as.factor(x))) %>%
  mutate(MAT = case_when(x2 == 1 | x2 == 2 ~ "0.1 quantile", x2 == 3 | x2 == 4 ~ "Median", x2 == 5 | x2 == 6 ~ "0.9 quantile"),
         SMI = case_when(group2 == 1 | group2 == 4 ~ "0.1 quantile", group2 == 2 | group2 == 5 ~ "Median", group2 == 3 | group2 == 6 ~ "0.9 quantile")) %>%
  mutate(MAT = factor(MAT, levels = c("0.1 quantile", "Median", "0.9 quantile"))) %>% mutate(SMI = factor(SMI, levels = c("0.1 quantile", "Median", "0.9 quantile"))) %>%
  mutate(Type = "Low precipitation")

fig3_data <- rbind(result.hightemp, result.lowprec) %>% rename("Coincidence with" = "Type")

fig3 <- ggplot(fig3_data, aes(x = x, y = predicted, colour = `Coincidence with`)) +
  facet_grid(Species~SMI, labeller = labeller(SMI = label_both)) +
  geom_line(linewidth = 1) +
  geom_hline(yintercept = 0.1, linetype = "dashed") +
  labs(x = "MAT", y = "Coincidence rate") +
  plottheme +
  theme(legend.position = "bottom") +
  guides(colour = guide_legend(title = "Coincidence with:")) +
  scale_color_viridis_d(option="viridis", end=0.8)

## Fig 4 (Resistance)
model.spruce_hightemp_res <- lme(Resistance_temp ~ Soil_moisture_model * Mean_annual_temperature,
                             random = ~ 1 | Site / ID,
                             data = resistance_stats[resistance_stats$Species == "21",], na.action = na.omit)
model.pine_hightemp_res <- lme(Resistance_temp ~ Soil_moisture_model * Mean_annual_temperature,
                           random = ~ 1 | Site / ID,
                           data = resistance_stats[resistance_stats$Species == "11",], na.action = na.omit)

spruce_pred <- predict_response(model.spruce_hightemp_res, terms = c(spruce_MAT_quants_extr, spruce_SM_quants_extr))
spruce_pred$Species <- "P. abies"
pine_pred <- predict_response(model.pine_hightemp_res, terms = c(pine_MAT_quants_extr, pine_SM_quants_extr))
pine_pred$Species <- "P. sylvestris"

result.hightemp <- as.data.frame(rbind(spruce_pred, pine_pred)) %>% mutate(group2 = as.numeric(group), x2 = as.numeric(as.factor(x))) %>%
  mutate(MAT = case_when(x2 == 1 | x2 == 2 ~ "0.1 quantile", x2 == 3 | x2 == 4 ~ "Median", x2 == 5 | x2 == 6 ~ "0.9 quantile"),
         SMI = case_when(group2 == 1 | group2 == 4 ~ "0.1 quantile", group2 == 2 | group2 == 5 ~ "Median", group2 == 3 | group2 == 6 ~ "0.9 quantile")) %>%
  mutate(MAT = factor(MAT, levels = c("0.1 quantile", "Median", "0.9 quantile"))) %>% mutate(SMI = factor(SMI, levels = c("0.1 quantile", "Median", "0.9 quantile"))) %>%
  mutate(Type = "High temperature")

model.spruce_lowprec_res <- lme(Resistance_precip ~ Soil_moisture_model * Mean_annual_temperature,
                            random = ~ 1 | Site / ID,
                            data = resistance_stats[resistance_stats$Species == "21",], na.action = na.omit)
model.pine_lowprec_res <- lme(Resistance_precip ~ Soil_moisture_model * Mean_annual_temperature,
                          random = ~ 1 | Site / ID,
                          data = resistance_stats[resistance_stats$Species == "11",], na.action = na.omit)

spruce_pred <- predict_response(model.spruce_lowprec_res, terms = c(spruce_MAT_quants_extr, spruce_SM_quants_extr))
spruce_pred$Species <- "P. abies"
pine_pred <- predict_response(model.pine_lowprec_res, terms = c(pine_MAT_quants_extr, pine_SM_quants_extr))
pine_pred$Species <- "P. sylvestris"

result.lowprec <- as.data.frame(rbind(spruce_pred, pine_pred)) %>% mutate(group2 = as.numeric(group), x2 = as.numeric(as.factor(x))) %>%
  mutate(MAT = case_when(x2 == 1 | x2 == 2 ~ "0.1 quantile", x2 == 3 | x2 == 4 ~ "Median", x2 == 5 | x2 == 6 ~ "0.9 quantile"),
         SMI = case_when(group2 == 1 | group2 == 4 ~ "0.1 quantile", group2 == 2 | group2 == 5 ~ "Median", group2 == 3 | group2 == 6 ~ "0.9 quantile")) %>%
  mutate(MAT = factor(MAT, levels = c("0.1 quantile", "Median", "0.9 quantile"))) %>% mutate(SMI = factor(SMI, levels = c("0.1 quantile", "Median", "0.9 quantile"))) %>%
  mutate(Type = "Low precipitation")

fig4_data <- rbind(result.hightemp, result.lowprec) %>% rename("Resistance to" = "Type")

fig4 <- ggplot(fig4_data, aes(x = x, y = predicted, colour = `Resistance to`)) +
  facet_grid(Species~SMI, labeller = labeller(SMI = label_both)) +
  geom_line(linewidth = 1) +
  geom_hline(yintercept = 1, linetype = "dashed") +
  labs(x = "MAT", y = "Resistance") +
  plottheme +
  theme(legend.position = "bottom") +
  guides(colour = guide_legend(title = "Resistance to:")) +
  scale_color_viridis_d(option="viridis", end=0.8)
